// Copyright 2019 The Goma Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// This is auto-generated file from generate_feature_list.py.
// Clang revision: 367654.
// *** DO NOT EDIT ***

static const char* KNOWN_FEATURES[] = {
    "address_sanitizer",
    "arc_cf_code_audited",
    "assume_nonnull",
    "attribute_analyzer_noreturn",
    "attribute_availability",
    "attribute_availability_app_extension",
    "attribute_availability_in_templates",
    "attribute_availability_swift",
    "attribute_availability_tvos",
    "attribute_availability_watchos",
    "attribute_availability_with_message",
    "attribute_availability_with_replacement",
    "attribute_availability_with_strict",
    "attribute_availability_with_version_underscores",
    "attribute_cf_consumed",
    "attribute_cf_returns_not_retained",
    "attribute_cf_returns_on_parameters",
    "attribute_cf_returns_retained",
    "attribute_deprecated_with_message",
    "attribute_deprecated_with_replacement",
    "attribute_diagnose_if_objc",
    "attribute_ext_vector_type",
    "attribute_ns_consumed",
    "attribute_ns_consumes_self",
    "attribute_ns_returns_not_retained",
    "attribute_ns_returns_retained",
    "attribute_objc_ivar_unused",
    "attribute_objc_method_family",
    "attribute_overloadable",
    "attribute_unavailable_with_message",
    "attribute_unused_on_fields",
    "blocks",
    "c_alignas",
    "c_alignof",
    "c_atomic",
    "c_generic_selections",
    "c_static_assert",
    "c_thread_local",
    "c_thread_safety_attributes",
    "cxx_access_control_sfinae",
    "cxx_aggregate_nsdmi",
    "cxx_alias_templates",
    "cxx_alignas",
    "cxx_alignof",
    "cxx_atomic",
    "cxx_attributes",
    "cxx_auto_type",
    "cxx_binary_literals",
    "cxx_constexpr",
    "cxx_constexpr_string_builtins",
    "cxx_contextual_conversions",
    "cxx_decltype",
    "cxx_decltype_auto",
    "cxx_decltype_incomplete_return_types",
    "cxx_default_function_template_args",
    "cxx_defaulted_functions",
    "cxx_delegating_constructors",
    "cxx_deleted_functions",
    "cxx_exceptions",
    "cxx_explicit_conversions",
    "cxx_generalized_initializers",
    "cxx_generic_lambdas",
    "cxx_implicit_moves",
    "cxx_inheriting_constructors",
    "cxx_init_captures",
    "cxx_inline_namespaces",
    "cxx_lambdas",
    "cxx_local_type_template_args",
    "cxx_noexcept",
    "cxx_nonstatic_member_init",
    "cxx_nullptr",
    "cxx_override_control",
    "cxx_range_for",
    "cxx_raw_string_literals",
    "cxx_reference_qualified_functions",
    "cxx_relaxed_constexpr",
    "cxx_return_type_deduction",
    "cxx_rtti",
    "cxx_rvalue_references",
    "cxx_static_assert",
    "cxx_strong_enums",
    "cxx_thread_local",
    "cxx_trailing_return",
    "cxx_unicode_literals",
    "cxx_unrestricted_unions",
    "cxx_user_literals",
    "cxx_variable_templates",
    "cxx_variadic_templates",
    "dataflow_sanitizer",
    "enumerator_attributes",
    "has_nothrow_assign",
    "has_nothrow_constructor",
    "has_nothrow_copy",
    "has_trivial_assign",
    "has_trivial_constructor",
    "has_trivial_copy",
    "has_trivial_destructor",
    "has_virtual_destructor",
    "hwaddress_sanitizer",
    "is_abstract",
    "is_base_of",
    "is_class",
    "is_constructible",
    "is_convertible_to",
    "is_empty",
    "is_enum",
    "is_final",
    "is_literal",
    "is_pod",
    "is_polymorphic",
    "is_sealed",
    "is_standard_layout",
    "is_trivial",
    "is_trivially_assignable",
    "is_trivially_constructible",
    "is_trivially_copyable",
    "is_union",
    "memory_sanitizer",
    "memtag_sanitizer",
    "modules",
    "nullability",
    "nullability_on_arrays",
    "objc_arc",
    "objc_arc_fields",
    "objc_arc_weak",
    "objc_arr",
    "objc_array_literals",
    "objc_bool",
    "objc_boxed_expressions",
    "objc_boxed_nsvalue_expressions",
    "objc_bridge_id",
    "objc_bridge_id_on_typedefs",
    "objc_c_static_assert",
    "objc_class_property",
    "objc_cxx_static_assert",
    "objc_default_synthesize_properties",
    "objc_dictionary_literals",
    "objc_fixed_enum",
    "objc_generics",
    "objc_generics_variance",
    "objc_instancetype",
    "objc_kindof",
    "objc_modules",
    "objc_nonfragile_abi",
    "objc_property_explicit_atomic",
    "objc_protocol_qualifier_mangling",
    "objc_subscripting",
    "objc_weak_class",
    "ownership_holds",
    "ownership_returns",
    "ownership_takes",
    "safe_stack",
    "scudo",
    "shadow_call_stack",
    "thread_sanitizer",
    "tls",
    "undefined_behavior_sanitizer",
    "underlying_type",
    "xray_instrument",
};
static const unsigned long NUM_KNOWN_FEATURES =
    sizeof(KNOWN_FEATURES) / sizeof(KNOWN_FEATURES[0]);

static const char* KNOWN_EXTENSIONS[] = {
    "c_alignas",
    "c_alignof",
    "c_atomic",
    "c_generic_selections",
    "c_static_assert",
    "c_thread_local",
    "cxx_atomic",
    "cxx_binary_literals",
    "cxx_deleted_functions",
    "cxx_explicit_conversions",
    "cxx_fixed_enum",
    "cxx_init_captures",
    "cxx_inline_namespaces",
    "cxx_local_type_template_args",
    "cxx_nonstatic_member_init",
    "cxx_override_control",
    "cxx_range_for",
    "cxx_reference_qualified_functions",
    "cxx_rvalue_references",
    "cxx_variable_templates",
    "cxx_variadic_templates",
    "gnu_asm",
    "objc_c_static_assert",
    "overloadable_unmarked",
    "pragma_clang_attribute_external_declaration",
    "pragma_clang_attribute_namespaces",
};
static const unsigned long NUM_KNOWN_EXTENSIONS =
    sizeof(KNOWN_EXTENSIONS) / sizeof(KNOWN_EXTENSIONS[0]);

static const char* KNOWN_ATTRIBUTES[] = {
    "NSObject",
    "Owner",
    "Pointer",
    "_Alignas",
    "_Nonnull",
    "_Noreturn",
    "_Null_unspecified",
    "_Nullable",
    "__asm__",
    "__cdecl",
    "__const",
    "__constant",
    "__constant__",
    "__cudart_builtin__",
    "__device__",
    "__device_builtin__",
    "__device_builtin_surface_type__",
    "__device_builtin_texture_type__",
    "__fastcall",
    "__forceinline",
    "__generic",
    "__global",
    "__global__",
    "__hip_pinned_shadow__",
    "__host__",
    "__kernel",
    "__kindof",
    "__launch_bounds__",
    "__local",
    "__multiple_inheritance",
    "__pascal",
    "__private",
    "__ptr32",
    "__ptr64",
    "__read_only",
    "__read_write",
    "__regcall",
    "__shared__",
    "__single_inheritance",
    "__sptr",
    "__stdcall",
    "__thiscall",
    "__unsafe_unretained",
    "__unspecified_inheritance",
    "__uptr",
    "__vectorcall",
    "__virtual_inheritance",
    "__w64",
    "__write_only",
    "_cdecl",
    "_fastcall",
    "_pascal",
    "_stdcall",
    "_thiscall",
    "_vectorcall",
    "aarch64_vector_pcs",
    "abi_tag",
    "acquired_after",
    "acquired_before",
    "address_space",
    "alias",
    "align",
    "align_value",
    "alignas",
    "aligned",
    "alloc_align",
    "alloc_size",
    "allocate",
    "allocator",
    "always_inline",
    "analyzer_noreturn",
    "annotate",
    "argument_with_type_tag",
    "artificial",
    "asm",
    "assert_exclusive_lock",
    "assert_shared_lock",
    "assume_aligned",
    "availability",
    "blocks",
    "bounded",
    "callback",
    "carries_dependency",
    "cdecl",
    "cf_audited_transfer",
    "cf_consumed",
    "cf_returns_not_retained",
    "cf_returns_retained",
    "cf_unknown_transfer",
    "cleanup",
    "code_seg",
    "cold",
    "common",
    "const",
    "constant",
    "constructor",
    "convergent",
    "cpu_dispatch",
    "cpu_specific",
    "cudart_builtin",
    "deprecated",
    "destructor",
    "device",
    "device_builtin",
    "device_builtin_surface_type",
    "device_builtin_texture_type",
    "diagnose_if",
    "disable_tail_calls",
    "dllexport",
    "dllimport",
    "empty_bases",
    "enable_if",
    "enum_extensibility",
    "exclude_from_explicit_instantiation",
    "exclusive_lock_function",
    "exclusive_trylock_function",
    "ext_vector_type",
    "external_source_symbol",
    "fallthrough",
    "far",
    "fastcall",
    "final",
    "flag_enum",
    "flatten",
    "force_align_arg_pointer",
    "format",
    "format_arg",
    "generic",
    "global",
    "gnu_inline",
    "guarded_by",
    "hip_pinned_shadow",
    "host",
    "hot",
    "ibaction",
    "iboutlet",
    "iboutletcollection",
    "ifunc",
    "import_module",
    "import_name",
    "init_priority",
    "intel_reqd_sub_group_size",
    "internal_linkage",
    "interrupt",
    "kernel",
    "launch_bounds",
    "layout_version",
    "local",
    "lock_returned",
    "lockable",
    "locks_excluded",
    "long_call",
    "lto_visibility_public",
    "malloc",
    "may_alias",
    "maybe_unused",
    "micromips",
    "mig_server_routine",
    "min_vector_width",
    "minsize",
    "mips16",
    "mode",
    "ms_abi",
    "ms_struct",
    "naked",
    "near",
    "neon_polyvector_type",
    "neon_vector_type",
    "no_address_safety_analysis",
    "no_caller_saved_registers",
    "no_instrument_function",
    "no_sanitize",
    "no_sanitize_address",
    "no_sanitize_memory",
    "no_sanitize_thread",
    "no_speculative_load_hardening",
    "no_split_stack",
    "no_stack_protector",
    "no_thread_safety_analysis",
    "noalias",
    "nocf_check",
    "nocommon",
    "nodebug",
    "noderef",
    "nodiscard",
    "noduplicate",
    "noescape",
    "noinline",
    "nomicromips",
    "nomips16",
    "nonnull",
    "noreturn",
    "nosvm",
    "not_tail_called",
    "nothrow",
    "nounroll",
    "nounroll_and_jam",
    "novtable",
    "ns_consumed",
    "ns_consumes_self",
    "ns_returns_autoreleased",
    "ns_returns_not_retained",
    "ns_returns_retained",
    "nv_weak",
    "objc_arc_weak_reference_unavailable",
    "objc_boxable",
    "objc_bridge",
    "objc_bridge_mutable",
    "objc_bridge_related",
    "objc_class_stub",
    "objc_designated_initializer",
    "objc_exception",
    "objc_externally_retained",
    "objc_gc",
    "objc_independent_class",
    "objc_method_family",
    "objc_nonlazy_class",
    "objc_ownership",
    "objc_precise_lifetime",
    "objc_protocol_requires_explicit_implementation",
    "objc_requires_property_definitions",
    "objc_requires_super",
    "objc_returns_inner_pointer",
    "objc_root_class",
    "objc_runtime_name",
    "objc_runtime_visible",
    "objc_subclassing_restricted",
    "opencl_unroll_hint",
    "optnone",
    "os_consumed",
    "os_consumes_this",
    "os_returns_not_retained",
    "os_returns_retained",
    "os_returns_retained_on_non_zero",
    "os_returns_retained_on_zero",
    "overloadable",
    "override",
    "ownership_holds",
    "ownership_returns",
    "ownership_takes",
    "packed",
    "pascal",
    "pass_dynamic_object_size",
    "pass_object_size",
    "pcs",
    "pointer_with_type_tag",
    "preserve_all",
    "preserve_most",
    "private",
    "property",
    "pt_guarded_by",
    "pure",
    "read_only",
    "read_write",
    "regcall",
    "regparm",
    "reqd_work_group_size",
    "restrict",
    "returns_nonnull",
    "returns_twice",
    "sealed",
    "section",
    "selectany",
    "sentinel",
    "shared",
    "shared_lock_function",
    "shared_trylock_function",
    "short_call",
    "signal",
    "speculative_load_hardening",
    "stdcall",
    "suppress",
    "swift_context",
    "swift_error_result",
    "swift_indirect_result",
    "swiftcall",
    "sysv_abi",
    "target",
    "thiscall",
    "thread",
    "tls_model",
    "transparent_union",
    "type_tag_for_datatype",
    "type_visibility",
    "unavailable",
    "unroll",
    "unroll_and_jam",
    "unused",
    "used",
    "uuid",
    "vec_type_hint",
    "vector_size",
    "vectorcall",
    "visibility",
    "warn_unused",
    "warn_unused_result",
    "weak",
    "weak_import",
    "weakref",
    "work_group_size_hint",
    "write_only",
    "xray_always_instrument",
    "xray_log_args",
    "xray_never_instrument",
};
static const unsigned long NUM_KNOWN_ATTRIBUTES =
    sizeof(KNOWN_ATTRIBUTES) / sizeof(KNOWN_ATTRIBUTES[0]);

static const char* KNOWN_CPP_ATTRIBUTES[] = {
    "carries_dependency", "clang::fallthrough", "clang::warn_unused_result",
    "deprecated",         "fallthrough",        "gsl::Owner",
    "gsl::Pointer",       "gsl::suppress",      "maybe_unused",
    "no_unique_address",  "nodiscard",          "noreturn",
};
static const unsigned long NUM_KNOWN_CPP_ATTRIBUTES =
    sizeof(KNOWN_CPP_ATTRIBUTES) / sizeof(KNOWN_CPP_ATTRIBUTES[0]);

static const char* KNOWN_DECLSPEC_ATTRIBUTES[] = {
    "NSObject",
    "Owner",
    "Pointer",
    "_Alignas",
    "_Nonnull",
    "_Noreturn",
    "_Null_unspecified",
    "_Nullable",
    "__asm__",
    "__cdecl",
    "__const",
    "__constant",
    "__constant__",
    "__cudart_builtin__",
    "__device__",
    "__device_builtin__",
    "__device_builtin_surface_type__",
    "__device_builtin_texture_type__",
    "__fastcall",
    "__forceinline",
    "__generic",
    "__global",
    "__global__",
    "__hip_pinned_shadow__",
    "__host__",
    "__kernel",
    "__kindof",
    "__launch_bounds__",
    "__local",
    "__multiple_inheritance",
    "__pascal",
    "__private",
    "__ptr32",
    "__ptr64",
    "__read_only",
    "__read_write",
    "__regcall",
    "__shared__",
    "__single_inheritance",
    "__sptr",
    "__stdcall",
    "__thiscall",
    "__unsafe_unretained",
    "__unspecified_inheritance",
    "__uptr",
    "__vectorcall",
    "__virtual_inheritance",
    "__w64",
    "__write_only",
    "_cdecl",
    "_fastcall",
    "_pascal",
    "_stdcall",
    "_thiscall",
    "_vectorcall",
    "aarch64_vector_pcs",
    "abi_tag",
    "acquired_after",
    "acquired_before",
    "address_space",
    "alias",
    "align",
    "align_value",
    "alignas",
    "aligned",
    "alloc_align",
    "alloc_size",
    "allocate",
    "allocator",
    "always_inline",
    "analyzer_noreturn",
    "annotate",
    "argument_with_type_tag",
    "artificial",
    "asm",
    "assert_exclusive_lock",
    "assert_shared_lock",
    "assume_aligned",
    "availability",
    "blocks",
    "bounded",
    "callback",
    "carries_dependency",
    "cdecl",
    "cf_audited_transfer",
    "cf_consumed",
    "cf_returns_not_retained",
    "cf_returns_retained",
    "cf_unknown_transfer",
    "cleanup",
    "code_seg",
    "cold",
    "common",
    "const",
    "constant",
    "constructor",
    "convergent",
    "cpu_dispatch",
    "cpu_specific",
    "cudart_builtin",
    "deprecated",
    "destructor",
    "device",
    "device_builtin",
    "device_builtin_surface_type",
    "device_builtin_texture_type",
    "diagnose_if",
    "disable_tail_calls",
    "dllexport",
    "dllimport",
    "empty_bases",
    "enable_if",
    "enum_extensibility",
    "exclude_from_explicit_instantiation",
    "exclusive_lock_function",
    "exclusive_trylock_function",
    "ext_vector_type",
    "external_source_symbol",
    "fallthrough",
    "far",
    "fastcall",
    "final",
    "flag_enum",
    "flatten",
    "force_align_arg_pointer",
    "format",
    "format_arg",
    "generic",
    "global",
    "gnu_inline",
    "guarded_by",
    "hip_pinned_shadow",
    "host",
    "hot",
    "ibaction",
    "iboutlet",
    "iboutletcollection",
    "ifunc",
    "import_module",
    "import_name",
    "init_priority",
    "intel_reqd_sub_group_size",
    "internal_linkage",
    "interrupt",
    "kernel",
    "launch_bounds",
    "layout_version",
    "local",
    "lock_returned",
    "lockable",
    "locks_excluded",
    "long_call",
    "lto_visibility_public",
    "malloc",
    "may_alias",
    "maybe_unused",
    "micromips",
    "mig_server_routine",
    "min_vector_width",
    "minsize",
    "mips16",
    "mode",
    "ms_abi",
    "ms_struct",
    "naked",
    "near",
    "neon_polyvector_type",
    "neon_vector_type",
    "no_address_safety_analysis",
    "no_caller_saved_registers",
    "no_instrument_function",
    "no_sanitize",
    "no_sanitize_address",
    "no_sanitize_memory",
    "no_sanitize_thread",
    "no_speculative_load_hardening",
    "no_split_stack",
    "no_stack_protector",
    "no_thread_safety_analysis",
    "noalias",
    "nocf_check",
    "nocommon",
    "nodebug",
    "noderef",
    "nodiscard",
    "noduplicate",
    "noescape",
    "noinline",
    "nomicromips",
    "nomips16",
    "nonnull",
    "noreturn",
    "nosvm",
    "not_tail_called",
    "nothrow",
    "nounroll",
    "nounroll_and_jam",
    "novtable",
    "ns_consumed",
    "ns_consumes_self",
    "ns_returns_autoreleased",
    "ns_returns_not_retained",
    "ns_returns_retained",
    "nv_weak",
    "objc_arc_weak_reference_unavailable",
    "objc_boxable",
    "objc_bridge",
    "objc_bridge_mutable",
    "objc_bridge_related",
    "objc_class_stub",
    "objc_designated_initializer",
    "objc_exception",
    "objc_externally_retained",
    "objc_gc",
    "objc_independent_class",
    "objc_method_family",
    "objc_nonlazy_class",
    "objc_ownership",
    "objc_precise_lifetime",
    "objc_protocol_requires_explicit_implementation",
    "objc_requires_property_definitions",
    "objc_requires_super",
    "objc_returns_inner_pointer",
    "objc_root_class",
    "objc_runtime_name",
    "objc_runtime_visible",
    "objc_subclassing_restricted",
    "opencl_unroll_hint",
    "optnone",
    "os_consumed",
    "os_consumes_this",
    "os_returns_not_retained",
    "os_returns_retained",
    "os_returns_retained_on_non_zero",
    "os_returns_retained_on_zero",
    "overloadable",
    "override",
    "ownership_holds",
    "ownership_returns",
    "ownership_takes",
    "packed",
    "pascal",
    "pass_dynamic_object_size",
    "pass_object_size",
    "pcs",
    "pointer_with_type_tag",
    "preserve_all",
    "preserve_most",
    "private",
    "property",
    "pt_guarded_by",
    "pure",
    "read_only",
    "read_write",
    "regcall",
    "regparm",
    "reqd_work_group_size",
    "restrict",
    "returns_nonnull",
    "returns_twice",
    "sealed",
    "section",
    "selectany",
    "sentinel",
    "shared",
    "shared_lock_function",
    "shared_trylock_function",
    "short_call",
    "signal",
    "speculative_load_hardening",
    "stdcall",
    "suppress",
    "swift_context",
    "swift_error_result",
    "swift_indirect_result",
    "swiftcall",
    "sysv_abi",
    "target",
    "thiscall",
    "thread",
    "tls_model",
    "transparent_union",
    "type_tag_for_datatype",
    "type_visibility",
    "unavailable",
    "unroll",
    "unroll_and_jam",
    "unused",
    "used",
    "uuid",
    "vec_type_hint",
    "vector_size",
    "vectorcall",
    "visibility",
    "warn_unused",
    "warn_unused_result",
    "weak",
    "weak_import",
    "weakref",
    "work_group_size_hint",
    "write_only",
    "xray_always_instrument",
    "xray_log_args",
    "xray_never_instrument",
};
static const unsigned long NUM_KNOWN_DECLSPEC_ATTRIBUTES =
    sizeof(KNOWN_DECLSPEC_ATTRIBUTES) /
    sizeof(KNOWN_DECLSPEC_ATTRIBUTES[0]);

static const char* KNOWN_BUILTINS[] = {
    "NSLog",
    "NSLogv",
    "_Block_object_assign",
    "_Block_object_dispose",
    "_Exit",
    "_InterlockedAnd",
    "_InterlockedAnd16",
    "_InterlockedAnd8",
    "_InterlockedCompareExchange",
    "_InterlockedCompareExchange16",
    "_InterlockedCompareExchange64",
    "_InterlockedCompareExchange8",
    "_InterlockedCompareExchangePointer",
    "_InterlockedCompareExchangePointer_nf",
    "_InterlockedDecrement",
    "_InterlockedDecrement16",
    "_InterlockedExchange",
    "_InterlockedExchange16",
    "_InterlockedExchange8",
    "_InterlockedExchangeAdd",
    "_InterlockedExchangeAdd16",
    "_InterlockedExchangeAdd8",
    "_InterlockedExchangePointer",
    "_InterlockedExchangeSub",
    "_InterlockedExchangeSub16",
    "_InterlockedExchangeSub8",
    "_InterlockedIncrement",
    "_InterlockedIncrement16",
    "_InterlockedOr",
    "_InterlockedOr16",
    "_InterlockedOr8",
    "_InterlockedXor",
    "_InterlockedXor16",
    "_InterlockedXor8",
    "_ReturnAddress",
    "__GetExceptionInfo",
    "__abnormal_termination",
    "__annotation",
    "__assume",
    "__atomic_add_fetch",
    "__atomic_always_lock_free",
    "__atomic_and_fetch",
    "__atomic_clear",
    "__atomic_compare_exchange",
    "__atomic_compare_exchange_n",
    "__atomic_exchange",
    "__atomic_exchange_n",
    "__atomic_fetch_add",
    "__atomic_fetch_and",
    "__atomic_fetch_max",
    "__atomic_fetch_min",
    "__atomic_fetch_nand",
    "__atomic_fetch_or",
    "__atomic_fetch_sub",
    "__atomic_fetch_xor",
    "__atomic_is_lock_free",
    "__atomic_load",
    "__atomic_load_n",
    "__atomic_nand_fetch",
    "__atomic_or_fetch",
    "__atomic_signal_fence",
    "__atomic_store",
    "__atomic_store_n",
    "__atomic_sub_fetch",
    "__atomic_test_and_set",
    "__atomic_thread_fence",
    "__atomic_xor_fetch",
    "__builtin___CFStringMakeConstantString",
    "__builtin___NSStringMakeConstantString",
    "__builtin___clear_cache",
    "__builtin___fprintf_chk",
    "__builtin___get_unsafe_stack_bottom",
    "__builtin___get_unsafe_stack_ptr",
    "__builtin___get_unsafe_stack_start",
    "__builtin___get_unsafe_stack_top",
    "__builtin___memccpy_chk",
    "__builtin___memcpy_chk",
    "__builtin___memmove_chk",
    "__builtin___mempcpy_chk",
    "__builtin___memset_chk",
    "__builtin___printf_chk",
    "__builtin___snprintf_chk",
    "__builtin___sprintf_chk",
    "__builtin___stpcpy_chk",
    "__builtin___stpncpy_chk",
    "__builtin___strcat_chk",
    "__builtin___strcpy_chk",
    "__builtin___strlcat_chk",
    "__builtin___strlcpy_chk",
    "__builtin___strncat_chk",
    "__builtin___strncpy_chk",
    "__builtin___vfprintf_chk",
    "__builtin___vprintf_chk",
    "__builtin___vsnprintf_chk",
    "__builtin___vsprintf_chk",
    "__builtin_abort",
    "__builtin_acosf",
    "__builtin_acoshf",
    "__builtin_acoshl",
    "__builtin_acosl",
    "__builtin_add_overflow",
    "__builtin_addc",
    "__builtin_addcb",
    "__builtin_addcl",
    "__builtin_addcll",
    "__builtin_addcs",
    "__builtin_addressof",
    "__builtin_alloca",
    "__builtin_alloca_with_align",
    "__builtin_annotation",
    "__builtin_asinf",
    "__builtin_asinhf",
    "__builtin_asinhl",
    "__builtin_asinl",
    "__builtin_assume",
    "__builtin_assume_aligned",
    "__builtin_atan2f",
    "__builtin_atan2l",
    "__builtin_atanf",
    "__builtin_atanhf",
    "__builtin_atanhl",
    "__builtin_atanl",
    "__builtin_bcmp",
    "__builtin_bcopy",
    "__builtin_bitreverse16",
    "__builtin_bitreverse32",
    "__builtin_bitreverse64",
    "__builtin_bitreverse8",
    "__builtin_bswap16",
    "__builtin_bswap32",
    "__builtin_bswap64",
    "__builtin_bzero",
    "__builtin_cabs",
    "__builtin_cabsf",
    "__builtin_cabsl",
    "__builtin_cacos",
    "__builtin_cacosf",
    "__builtin_cacosh",
    "__builtin_cacoshf",
    "__builtin_cacoshl",
    "__builtin_cacosl",
    "__builtin_call_with_static_chain",
    "__builtin_canonicalize",
    "__builtin_canonicalizef",
    "__builtin_canonicalizel",
    "__builtin_carg",
    "__builtin_cargf",
    "__builtin_cargl",
    "__builtin_casin",
    "__builtin_casinf",
    "__builtin_casinh",
    "__builtin_casinhf",
    "__builtin_casinhl",
    "__builtin_casinl",
    "__builtin_catan",
    "__builtin_catanf",
    "__builtin_catanh",
    "__builtin_catanhf",
    "__builtin_catanhl",
    "__builtin_catanl",
    "__builtin_cbrtf",
    "__builtin_cbrtl",
    "__builtin_ccos",
    "__builtin_ccosf",
    "__builtin_ccosh",
    "__builtin_ccoshf",
    "__builtin_ccoshl",
    "__builtin_ccosl",
    "__builtin_ceilf",
    "__builtin_ceill",
    "__builtin_cexp",
    "__builtin_cexpf",
    "__builtin_cexpl",
    "__builtin_char_memchr",
    "__builtin_cimag",
    "__builtin_cimagf",
    "__builtin_cimagl",
    "__builtin_classify_type",
    "__builtin_clog",
    "__builtin_clogf",
    "__builtin_clogl",
    "__builtin_clrsbll",
    "__builtin_clzll",
    "__builtin_conj",
    "__builtin_conjf",
    "__builtin_conjl",
    "__builtin_constant_p",
    "__builtin_convertvector",
    "__builtin_copysign",
    "__builtin_copysignf",
    "__builtin_copysignf128",
    "__builtin_copysignl",
    "__builtin_coro_alloc",
    "__builtin_coro_begin",
    "__builtin_coro_destroy",
    "__builtin_coro_done",
    "__builtin_coro_end",
    "__builtin_coro_frame",
    "__builtin_coro_free",
    "__builtin_coro_id",
    "__builtin_coro_noop",
    "__builtin_coro_param",
    "__builtin_coro_promise",
    "__builtin_coro_resume",
    "__builtin_coro_size",
    "__builtin_coro_suspend",
    "__builtin_cosf",
    "__builtin_coshf",
    "__builtin_coshl",
    "__builtin_cosl",
    "__builtin_cpow",
    "__builtin_cpowf",
    "__builtin_cpowl",
    "__builtin_cproj",
    "__builtin_cprojf",
    "__builtin_cprojl",
    "__builtin_creal",
    "__builtin_crealf",
    "__builtin_creall",
    "__builtin_csin",
    "__builtin_csinf",
    "__builtin_csinh",
    "__builtin_csinhf",
    "__builtin_csinhl",
    "__builtin_csinl",
    "__builtin_csqrt",
    "__builtin_csqrtf",
    "__builtin_csqrtl",
    "__builtin_ctan",
    "__builtin_ctanf",
    "__builtin_ctanh",
    "__builtin_ctanhf",
    "__builtin_ctanhl",
    "__builtin_ctanl",
    "__builtin_ctzll",
    "__builtin_debugtrap",
    "__builtin_dump_struct",
    "__builtin_dwarf_cfa",
    "__builtin_dwarf_sp_column",
    "__builtin_dynamic_object_size",
    "__builtin_eh_return",
    "__builtin_eh_return_data_regno",
    "__builtin_erfcf",
    "__builtin_erfcl",
    "__builtin_erff",
    "__builtin_erfl",
    "__builtin_exp2f",
    "__builtin_exp2l",
    "__builtin_expect",
    "__builtin_expf",
    "__builtin_expl",
    "__builtin_expm1f",
    "__builtin_expm1l",
    "__builtin_extend_pointer",
    "__builtin_extract_return_addr",
    "__builtin_fabsf",
    "__builtin_fabsf128",
    "__builtin_fabsl",
    "__builtin_fdim",
    "__builtin_fdimf",
    "__builtin_fdiml",
    "__builtin_ffsll",
    "__builtin_floorf",
    "__builtin_floorl",
    "__builtin_flt_rounds",
    "__builtin_fma",
    "__builtin_fmaf",
    "__builtin_fmal",
    "__builtin_fmax",
    "__builtin_fmaxf",
    "__builtin_fmaxl",
    "__builtin_fmin",
    "__builtin_fminf",
    "__builtin_fminl",
    "__builtin_fmodf",
    "__builtin_fmodl",
    "__builtin_fpclassify",
    "__builtin_fprintf",
    "__builtin_frame_address",
    "__builtin_frexpf",
    "__builtin_frexpl",
    "__builtin_frob_return_addr",
    "__builtin_huge_val",
    "__builtin_huge_valf",
    "__builtin_huge_valf128",
    "__builtin_huge_vall",
    "__builtin_hypotf",
    "__builtin_hypotl",
    "__builtin_ilogbf",
    "__builtin_ilogbl",
    "__builtin_index",
    "__builtin_init_dwarf_reg_size_table",
    "__builtin_is_constant_evaluated",
    "__builtin_isfinite",
    "__builtin_isgreaterequal",
    "__builtin_isinf",
    "__builtin_isinf_sign",
    "__builtin_isnan",
    "__builtin_isnormal",
    "__builtin_launder",
    "__builtin_ldexpf",
    "__builtin_ldexpl",
    "__builtin_lgammaf",
    "__builtin_lgammal",
    "__builtin_llabs",
    "__builtin_llrint",
    "__builtin_llrintf",
    "__builtin_llrintl",
    "__builtin_llroundf",
    "__builtin_llroundl",
    "__builtin_load_half",
    "__builtin_load_halff",
    "__builtin_log10f",
    "__builtin_log10l",
    "__builtin_log1pf",
    "__builtin_log1pl",
    "__builtin_log2",
    "__builtin_log2f",
    "__builtin_log2l",
    "__builtin_logbf",
    "__builtin_logbl",
    "__builtin_logf",
    "__builtin_logl",
    "__builtin_longjmp",
    "__builtin_lrintf",
    "__builtin_lrintl",
    "__builtin_lroundf",
    "__builtin_lroundl",
    "__builtin_memchr",
    "__builtin_memcmp",
    "__builtin_memcpy",
    "__builtin_memmove",
    "__builtin_mempcpy",
    "__builtin_memset",
    "__builtin_modff",
    "__builtin_modfl",
    "__builtin_ms_va_copy",
    "__builtin_ms_va_end",
    "__builtin_ms_va_start",
    "__builtin_mul_overflow",
    "__builtin_nan",
    "__builtin_nanf",
    "__builtin_nanf128",
    "__builtin_nanl",
    "__builtin_nans",
    "__builtin_nansf",
    "__builtin_nansf128",
    "__builtin_nansl",
    "__builtin_nearbyintf",
    "__builtin_nearbyintl",
    "__builtin_nextafterf",
    "__builtin_nextafterl",
    "__builtin_nexttowardf",
    "__builtin_nexttowardl",
    "__builtin_nontemporal_load",
    "__builtin_nontemporal_store",
    "__builtin_objc_memmove_collectable",
    "__builtin_object_size",
    "__builtin_operator_delete",
    "__builtin_operator_new",
    "__builtin_os_log_format",
    "__builtin_os_log_format_buffer_size",
    "__builtin_parityll",
    "__builtin_popcountll",
    "__builtin_powf",
    "__builtin_powif",
    "__builtin_powil",
    "__builtin_powl",
    "__builtin_prefetch",
    "__builtin_preserve_access_index",
    "__builtin_printf",
    "__builtin_readcyclecounter",
    "__builtin_remainderf",
    "__builtin_remainderl",
    "__builtin_remquof",
    "__builtin_remquol",
    "__builtin_return_address",
    "__builtin_rindex",
    "__builtin_rintf",
    "__builtin_rintl",
    "__builtin_rotateleft16",
    "__builtin_rotateleft32",
    "__builtin_rotateleft64",
    "__builtin_rotateleft8",
    "__builtin_rotateright16",
    "__builtin_rotateright32",
    "__builtin_rotateright64",
    "__builtin_rotateright8",
    "__builtin_round",
    "__builtin_roundf",
    "__builtin_roundl",
    "__builtin_sadd_overflow",
    "__builtin_saddl_overflow",
    "__builtin_saddll_overflow",
    "__builtin_scalblnf",
    "__builtin_scalblnl",
    "__builtin_scalbnf",
    "__builtin_scalbnl",
    "__builtin_setjmp",
    "__builtin_shufflevector",
    "__builtin_signbit",
    "__builtin_signbitf",
    "__builtin_signbitl",
    "__builtin_sinf",
    "__builtin_sinhf",
    "__builtin_sinhl",
    "__builtin_sinl",
    "__builtin_smul_overflow",
    "__builtin_smull_overflow",
    "__builtin_smulll_overflow",
    "__builtin_snprintf",
    "__builtin_sqrtf",
    "__builtin_sqrtl",
    "__builtin_ssub_overflow",
    "__builtin_ssubl_overflow",
    "__builtin_ssubll_overflow",
    "__builtin_stdarg_start",
    "__builtin_store_half",
    "__builtin_store_halff",
    "__builtin_stpcpy",
    "__builtin_stpncpy",
    "__builtin_strcasecmp",
    "__builtin_strcat",
    "__builtin_strchr",
    "__builtin_strcmp",
    "__builtin_strcpy",
    "__builtin_strcspn",
    "__builtin_strdup",
    "__builtin_strlen",
    "__builtin_strncasecmp",
    "__builtin_strncat",
    "__builtin_strncmp",
    "__builtin_strncpy",
    "__builtin_strndup",
    "__builtin_strpbrk",
    "__builtin_strrchr",
    "__builtin_strspn",
    "__builtin_strstr",
    "__builtin_sub_overflow",
    "__builtin_subc",
    "__builtin_subcb",
    "__builtin_subcl",
    "__builtin_subcll",
    "__builtin_subcs",
    "__builtin_tanf",
    "__builtin_tanhf",
    "__builtin_tanhl",
    "__builtin_tanl",
    "__builtin_tgammaf",
    "__builtin_tgammal",
    "__builtin_thread_pointer",
    "__builtin_trap",
    "__builtin_truncf",
    "__builtin_truncl",
    "__builtin_uadd_overflow",
    "__builtin_uaddl_overflow",
    "__builtin_uaddll_overflow",
    "__builtin_umul_overflow",
    "__builtin_umull_overflow",
    "__builtin_umulll_overflow",
    "__builtin_unpredictable",
    "__builtin_unreachable",
    "__builtin_unwind_init",
    "__builtin_usub_overflow",
    "__builtin_usubl_overflow",
    "__builtin_usubll_overflow",
    "__builtin_va_copy",
    "__builtin_va_end",
    "__builtin_va_start",
    "__builtin_vsnprintf",
    "__builtin_vsprintf",
    "__builtin_wcschr",
    "__builtin_wcscmp",
    "__builtin_wcslen",
    "__builtin_wcsncmp",
    "__builtin_wmemchr",
    "__builtin_wmemcmp",
    "__builtin_wmemcpy",
    "__builtin_wmemmove",
    "__c11_atomic_compare_exchange_strong",
    "__c11_atomic_compare_exchange_weak",
    "__c11_atomic_exchange",
    "__c11_atomic_fetch_add",
    "__c11_atomic_fetch_and",
    "__c11_atomic_fetch_or",
    "__c11_atomic_fetch_sub",
    "__c11_atomic_fetch_xor",
    "__c11_atomic_init",
    "__c11_atomic_is_lock_free",
    "__c11_atomic_load",
    "__c11_atomic_signal_fence",
    "__c11_atomic_store",
    "__c11_atomic_thread_fence",
    "__cospi",
    "__cospif",
    "__debugbreak",
    "__exception_code",
    "__exception_info",
    "__exp10",
    "__exp10f",
    "__fastfail",
    "__finite",
    "__finitef",
    "__finitel",
    "__iso_volatile_load16",
    "__iso_volatile_load32",
    "__iso_volatile_load64",
    "__iso_volatile_load8",
    "__iso_volatile_store16",
    "__iso_volatile_store32",
    "__iso_volatile_store64",
    "__iso_volatile_store8",
    "__lzcnt",
    "__lzcnt16",
    "__lzcnt64",
    "__noop",
    "__opencl_atomic_compare_exchange_strong",
    "__opencl_atomic_compare_exchange_weak",
    "__opencl_atomic_exchange",
    "__opencl_atomic_fetch_add",
    "__opencl_atomic_fetch_and",
    "__opencl_atomic_fetch_max",
    "__opencl_atomic_fetch_min",
    "__opencl_atomic_fetch_or",
    "__opencl_atomic_fetch_sub",
    "__opencl_atomic_fetch_xor",
    "__opencl_atomic_init",
    "__opencl_atomic_load",
    "__opencl_atomic_store",
    "__popcnt",
    "__popcnt16",
    "__popcnt64",
    "__sigsetjmp",
    "__sinpi",
    "__sinpif",
    "__sync_add_and_fetch",
    "__sync_add_and_fetch_1",
    "__sync_add_and_fetch_16",
    "__sync_add_and_fetch_2",
    "__sync_add_and_fetch_4",
    "__sync_add_and_fetch_8",
    "__sync_and_and_fetch",
    "__sync_and_and_fetch_1",
    "__sync_and_and_fetch_16",
    "__sync_and_and_fetch_2",
    "__sync_and_and_fetch_4",
    "__sync_and_and_fetch_8",
    "__sync_bool_compare_and_swap",
    "__sync_bool_compare_and_swap_1",
    "__sync_bool_compare_and_swap_16",
    "__sync_bool_compare_and_swap_2",
    "__sync_bool_compare_and_swap_4",
    "__sync_bool_compare_and_swap_8",
    "__sync_fetch_and_add",
    "__sync_fetch_and_add_1",
    "__sync_fetch_and_add_16",
    "__sync_fetch_and_add_2",
    "__sync_fetch_and_add_4",
    "__sync_fetch_and_add_8",
    "__sync_fetch_and_and",
    "__sync_fetch_and_and_1",
    "__sync_fetch_and_and_16",
    "__sync_fetch_and_and_2",
    "__sync_fetch_and_and_4",
    "__sync_fetch_and_and_8",
    "__sync_fetch_and_max",
    "__sync_fetch_and_min",
    "__sync_fetch_and_nand",
    "__sync_fetch_and_nand_1",
    "__sync_fetch_and_nand_16",
    "__sync_fetch_and_nand_2",
    "__sync_fetch_and_nand_4",
    "__sync_fetch_and_nand_8",
    "__sync_fetch_and_or",
    "__sync_fetch_and_or_1",
    "__sync_fetch_and_or_16",
    "__sync_fetch_and_or_2",
    "__sync_fetch_and_or_4",
    "__sync_fetch_and_or_8",
    "__sync_fetch_and_sub",
    "__sync_fetch_and_sub_1",
    "__sync_fetch_and_sub_16",
    "__sync_fetch_and_sub_2",
    "__sync_fetch_and_sub_4",
    "__sync_fetch_and_sub_8",
    "__sync_fetch_and_umax",
    "__sync_fetch_and_umin",
    "__sync_fetch_and_xor",
    "__sync_fetch_and_xor_1",
    "__sync_fetch_and_xor_16",
    "__sync_fetch_and_xor_2",
    "__sync_fetch_and_xor_4",
    "__sync_fetch_and_xor_8",
    "__sync_lock_release",
    "__sync_lock_release_1",
    "__sync_lock_release_16",
    "__sync_lock_release_2",
    "__sync_lock_release_4",
    "__sync_lock_release_8",
    "__sync_lock_test_and_set",
    "__sync_lock_test_and_set_1",
    "__sync_lock_test_and_set_16",
    "__sync_lock_test_and_set_2",
    "__sync_lock_test_and_set_4",
    "__sync_lock_test_and_set_8",
    "__sync_nand_and_fetch",
    "__sync_nand_and_fetch_1",
    "__sync_nand_and_fetch_16",
    "__sync_nand_and_fetch_2",
    "__sync_nand_and_fetch_4",
    "__sync_nand_and_fetch_8",
    "__sync_or_and_fetch",
    "__sync_or_and_fetch_1",
    "__sync_or_and_fetch_16",
    "__sync_or_and_fetch_2",
    "__sync_or_and_fetch_4",
    "__sync_or_and_fetch_8",
    "__sync_sub_and_fetch",
    "__sync_sub_and_fetch_1",
    "__sync_sub_and_fetch_16",
    "__sync_sub_and_fetch_2",
    "__sync_sub_and_fetch_4",
    "__sync_sub_and_fetch_8",
    "__sync_swap",
    "__sync_swap_1",
    "__sync_swap_16",
    "__sync_swap_2",
    "__sync_swap_4",
    "__sync_swap_8",
    "__sync_synchronize",
    "__sync_val_compare_and_swap",
    "__sync_val_compare_and_swap_1",
    "__sync_val_compare_and_swap_16",
    "__sync_val_compare_and_swap_2",
    "__sync_val_compare_and_swap_4",
    "__sync_val_compare_and_swap_8",
    "__sync_xor_and_fetch",
    "__sync_xor_and_fetch_1",
    "__sync_xor_and_fetch_16",
    "__sync_xor_and_fetch_2",
    "__sync_xor_and_fetch_4",
    "__sync_xor_and_fetch_8",
    "__tanpi",
    "__tanpif",
    "__va_start",
    "__xray_customevent",
    "__xray_typedevent",
    "_abnormal_termination",
    "_alloca",
    "_bittest",
    "_bittest64",
    "_bittestandcomplement",
    "_bittestandcomplement64",
    "_bittestandreset",
    "_bittestandreset64",
    "_bittestandset",
    "_bittestandset64",
    "_byteswap_uint64",
    "_byteswap_ulong",
    "_byteswap_ushort",
    "_exception_code",
    "_exception_info",
    "_exit",
    "_interlockedbittestandreset",
    "_interlockedbittestandreset64",
    "_interlockedbittestandreset_acq",
    "_interlockedbittestandreset_nf",
    "_interlockedbittestandreset_rel",
    "_interlockedbittestandset",
    "_interlockedbittestandset64",
    "_interlockedbittestandset_acq",
    "_interlockedbittestandset_nf",
    "_interlockedbittestandset_rel",
    "_longjmp",
    "_lrotl",
    "_lrotr",
    "_rotl",
    "_rotl16",
    "_rotl64",
    "_rotl8",
    "_rotr",
    "_rotr16",
    "_rotr64",
    "_rotr8",
    "_setjmp",
    "_setjmpex",
    "abort",
    "abs",
    "acos",
    "acosf",
    "acosh",
    "acoshf",
    "acoshl",
    "acosl",
    "alloca",
    "asin",
    "asinf",
    "asinh",
    "asinhf",
    "asinhl",
    "asinl",
    "atan",
    "atan2",
    "atan2f",
    "atan2l",
    "atanf",
    "atanh",
    "atanhf",
    "atanhl",
    "atanl",
    "bcmp",
    "bzero",
    "cabs",
    "cabsf",
    "cabsl",
    "cacos",
    "cacosf",
    "cacosh",
    "cacoshf",
    "cacoshl",
    "cacosl",
    "calloc",
    "carg",
    "cargf",
    "cargl",
    "casin",
    "casinf",
    "casinh",
    "casinhf",
    "casinhl",
    "casinl",
    "catan",
    "catanf",
    "catanh",
    "catanhf",
    "catanhl",
    "catanl",
    "cbrt",
    "cbrtf",
    "cbrtl",
    "ccos",
    "ccosf",
    "ccosh",
    "ccoshf",
    "ccoshl",
    "ccosl",
    "ceil",
    "ceilf",
    "ceill",
    "cexp",
    "cexpf",
    "cexpl",
    "cimag",
    "cimagf",
    "cimagl",
    "clog",
    "clogf",
    "clogl",
    "commit_read_pipe",
    "commit_write_pipe",
    "conj",
    "conjf",
    "conjl",
    "copysign",
    "copysignf",
    "copysignl",
    "cos",
    "cosf",
    "cosh",
    "coshf",
    "coshl",
    "cosl",
    "cpow",
    "cpowf",
    "cpowl",
    "cproj",
    "cprojf",
    "cprojl",
    "creal",
    "crealf",
    "creall",
    "csin",
    "csinf",
    "csinh",
    "csinhf",
    "csinhl",
    "csinl",
    "csqrt",
    "csqrtf",
    "csqrtl",
    "ctan",
    "ctanf",
    "ctanh",
    "ctanhf",
    "ctanhl",
    "ctanl",
    "enqueue_kernel",
    "erf",
    "erfc",
    "erfcf",
    "erfcl",
    "erff",
    "erfl",
    "exit",
    "exp",
    "exp2",
    "exp2f",
    "exp2l",
    "expf",
    "expl",
    "expm1",
    "expm1f",
    "expm1l",
    "fabs",
    "fabsf",
    "fabsl",
    "fdim",
    "fdimf",
    "fdiml",
    "finite",
    "finitef",
    "finitel",
    "floor",
    "floorf",
    "floorl",
    "fma",
    "fmaf",
    "fmal",
    "fmax",
    "fmaxf",
    "fmaxl",
    "fmin",
    "fminf",
    "fminl",
    "fmod",
    "fmodf",
    "fmodl",
    "fopen",
    "fprintf",
    "fread",
    "frexp",
    "frexpf",
    "frexpl",
    "fscanf",
    "fwrite",
    "get_kernel_max_sub_group_size_for_ndrange",
    "get_kernel_preferred_work_group_size_multiple",
    "get_kernel_sub_group_count_for_ndrange",
    "get_kernel_work_group_size",
    "get_pipe_max_packets",
    "get_pipe_num_packets",
    "getcontext",
    "hypot",
    "hypotf",
    "hypotl",
    "ilogb",
    "ilogbf",
    "ilogbl",
    "index",
    "isalnum",
    "isalpha",
    "isblank",
    "iscntrl",
    "isdigit",
    "isgraph",
    "islower",
    "isprint",
    "ispunct",
    "isspace",
    "isupper",
    "isxdigit",
    "labs",
    "ldexp",
    "ldexpf",
    "ldexpl",
    "lgamma",
    "lgammaf",
    "lgammal",
    "llabs",
    "llrint",
    "llrintf",
    "llrintl",
    "llround",
    "llroundf",
    "llroundl",
    "log",
    "log10",
    "log10f",
    "log10l",
    "log1p",
    "log1pf",
    "log1pl",
    "log2",
    "log2f",
    "log2l",
    "logb",
    "logbf",
    "logbl",
    "logf",
    "logl",
    "longjmp",
    "lrint",
    "lrintf",
    "lrintl",
    "lround",
    "lroundf",
    "lroundl",
    "malloc",
    "memchr",
    "memcmp",
    "memcpy",
    "memmove",
    "memset",
    "modf",
    "modff",
    "modfl",
    "nan",
    "nanf",
    "nanl",
    "nearbyint",
    "nearbyintf",
    "nearbyintl",
    "nextafter",
    "nextafterf",
    "nextafterl",
    "nexttoward",
    "nexttowardf",
    "nexttowardl",
    "objc_assign_global",
    "objc_assign_ivar",
    "objc_assign_strongCast",
    "objc_assign_weak",
    "objc_enumerationMutation",
    "objc_exception_extract",
    "objc_exception_match",
    "objc_exception_throw",
    "objc_exception_try_enter",
    "objc_exception_try_exit",
    "objc_getClass",
    "objc_getMetaClass",
    "objc_msgSend",
    "objc_msgSendSuper",
    "objc_msgSendSuper_stret",
    "objc_msgSend_fp2ret",
    "objc_msgSend_fpret",
    "objc_msgSend_stret",
    "objc_read_weak",
    "objc_sync_enter",
    "objc_sync_exit",
    "omp_is_initial_device",
    "pow",
    "powf",
    "powl",
    "printf",
    "pthread_create",
    "qsetjmp",
    "read_pipe",
    "realloc",
    "remainder",
    "remainderf",
    "remainderl",
    "remquo",
    "remquof",
    "remquol",
    "reserve_read_pipe",
    "reserve_write_pipe",
    "rindex",
    "rint",
    "rintf",
    "rintl",
    "round",
    "roundf",
    "roundl",
    "savectx",
    "scalbln",
    "scalblnf",
    "scalblnl",
    "scalbn",
    "scalbnf",
    "scalbnl",
    "scanf",
    "setjmp",
    "setjmp_syscall",
    "siglongjmp",
    "sigsetjmp",
    "sin",
    "sinf",
    "sinh",
    "sinhf",
    "sinhl",
    "sinl",
    "snprintf",
    "sprintf",
    "sqrt",
    "sqrtf",
    "sqrtl",
    "sscanf",
    "stpcpy",
    "stpncpy",
    "strcasecmp",
    "strcat",
    "strchr",
    "strcmp",
    "strcpy",
    "strcspn",
    "strdup",
    "strerror",
    "strlcat",
    "strlcpy",
    "strlen",
    "strncasecmp",
    "strncat",
    "strncmp",
    "strncpy",
    "strndup",
    "strpbrk",
    "strrchr",
    "strspn",
    "strstr",
    "strtod",
    "strtof",
    "strtok",
    "strtol",
    "strtold",
    "strtoll",
    "strtoul",
    "strtoull",
    "strxfrm",
    "sub_group_commit_read_pipe",
    "sub_group_commit_write_pipe",
    "sub_group_reserve_read_pipe",
    "sub_group_reserve_write_pipe",
    "tan",
    "tanf",
    "tanh",
    "tanhf",
    "tanhl",
    "tanl",
    "tgamma",
    "tgammaf",
    "tgammal",
    "to_global",
    "to_local",
    "to_private",
    "tolower",
    "toupper",
    "trunc",
    "truncf",
    "truncl",
    "va_copy",
    "va_end",
    "va_start",
    "vfork",
    "vfprintf",
    "vfscanf",
    "vprintf",
    "vscanf",
    "vsnprintf",
    "vsprintf",
    "vsscanf",
    "wcschr",
    "wcscmp",
    "wcslen",
    "wcsncmp",
    "wmemchr",
    "wmemcmp",
    "wmemcpy",
    "wmemmove",
    "work_group_commit_read_pipe",
    "work_group_commit_write_pipe",
    "work_group_reserve_read_pipe",
    "work_group_reserve_write_pipe",
    "write_pipe",
};
static const unsigned long NUM_KNOWN_BUILTINS =
    sizeof(KNOWN_BUILTINS) /
    sizeof(KNOWN_BUILTINS[0]);
