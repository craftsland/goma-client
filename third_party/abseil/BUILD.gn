config("abseil_config") {
  include_dirs = [ "src" ]
}

# All libraries combined.
# TODO: It's better to split libraries like abseil's BUILD files,
# but for goma use, this would be enough since we don't update abseil
# frequently.
static_library("abseil") {
  # In abseil directory,
  # $ find src | egrep '\.(h|cc|inc)$' |
  #       grep -v '_test' | \
  #       grep -v 'test_util' | \
  #       grep -v 'nonprod' | \
  #       grep -v 'benchmark.cc' | \
  #       sed -e 's/^/"/' -e 's/$/",/' | sort
  # Note: a few unnecessary files might be left. You might need to
  # remove it manually.
  sources = [
    "src/absl/algorithm/algorithm.h",
    "src/absl/algorithm/container.h",
    "src/absl/base/attributes.h",
    "src/absl/base/call_once.h",
    "src/absl/base/casts.h",
    "src/absl/base/config.h",
    "src/absl/base/dynamic_annotations.cc",
    "src/absl/base/dynamic_annotations.h",
    "src/absl/base/internal/atomic_hook.h",
    "src/absl/base/internal/cycleclock.cc",
    "src/absl/base/internal/cycleclock.h",
    "src/absl/base/internal/direct_mmap.h",
    "src/absl/base/internal/endian.h",
    "src/absl/base/internal/hide_ptr.h",
    "src/absl/base/internal/identity.h",
    "src/absl/base/internal/inline_variable.h",
    "src/absl/base/internal/invoke.h",
    "src/absl/base/internal/low_level_alloc.cc",
    "src/absl/base/internal/low_level_alloc.h",
    "src/absl/base/internal/low_level_scheduling.h",
    "src/absl/base/internal/per_thread_tls.h",
    "src/absl/base/internal/pretty_function.h",
    "src/absl/base/internal/raw_logging.cc",
    "src/absl/base/internal/raw_logging.h",
    "src/absl/base/internal/scheduling_mode.h",
    "src/absl/base/internal/spinlock.cc",
    "src/absl/base/internal/spinlock.h",
    "src/absl/base/internal/spinlock_akaros.inc",
    "src/absl/base/internal/spinlock_posix.inc",
    "src/absl/base/internal/spinlock_wait.cc",
    "src/absl/base/internal/spinlock_wait.h",
    "src/absl/base/internal/spinlock_win32.inc",
    "src/absl/base/internal/sysinfo.cc",
    "src/absl/base/internal/sysinfo.h",
    "src/absl/base/internal/thread_identity.cc",
    "src/absl/base/internal/thread_identity.h",
    "src/absl/base/internal/throw_delegate.cc",
    "src/absl/base/internal/throw_delegate.h",
    "src/absl/base/internal/tsan_mutex_interface.h",
    "src/absl/base/internal/unaligned_access.h",
    "src/absl/base/internal/unscaledcycleclock.cc",
    "src/absl/base/internal/unscaledcycleclock.h",
    "src/absl/base/log_severity.h",
    "src/absl/base/macros.h",
    "src/absl/base/optimization.h",
    "src/absl/base/policy_checks.h",
    "src/absl/base/port.h",
    "src/absl/base/thread_annotations.h",
    "src/absl/container/fixed_array.h",
    "src/absl/container/inlined_vector.h",
    "src/absl/container/internal/test_instance_tracker.cc",
    "src/absl/container/internal/test_instance_tracker.h",
    "src/absl/debugging/failure_signal_handler.cc",
    "src/absl/debugging/failure_signal_handler.h",
    "src/absl/debugging/internal/address_is_readable.cc",
    "src/absl/debugging/internal/address_is_readable.h",
    "src/absl/debugging/internal/demangle.cc",
    "src/absl/debugging/internal/demangle.h",
    "src/absl/debugging/internal/elf_mem_image.cc",
    "src/absl/debugging/internal/elf_mem_image.h",
    "src/absl/debugging/internal/examine_stack.cc",
    "src/absl/debugging/internal/examine_stack.h",
    "src/absl/debugging/internal/stack_consumption.cc",
    "src/absl/debugging/internal/stack_consumption.h",
    "src/absl/debugging/internal/stacktrace_aarch64-inl.inc",
    "src/absl/debugging/internal/stacktrace_arm-inl.inc",
    "src/absl/debugging/internal/stacktrace_config.h",
    "src/absl/debugging/internal/stacktrace_generic-inl.inc",
    "src/absl/debugging/internal/stacktrace_powerpc-inl.inc",
    "src/absl/debugging/internal/stacktrace_unimplemented-inl.inc",
    "src/absl/debugging/internal/stacktrace_win32-inl.inc",
    "src/absl/debugging/internal/stacktrace_x86-inl.inc",
    "src/absl/debugging/internal/symbolize.h",
    "src/absl/debugging/internal/vdso_support.cc",
    "src/absl/debugging/internal/vdso_support.h",
    "src/absl/debugging/leak_check.cc",
    "src/absl/debugging/leak_check.h",
    "src/absl/debugging/leak_check_disable.cc",
    "src/absl/debugging/stacktrace.cc",
    "src/absl/debugging/stacktrace.h",
    "src/absl/debugging/symbolize.cc",
    "src/absl/debugging/symbolize.h",
    "src/absl/debugging/symbolize_elf.inc",
    "src/absl/debugging/symbolize_unimplemented.inc",
    "src/absl/debugging/symbolize_win32.inc",
    "src/absl/memory/memory.h",
    "src/absl/meta/type_traits.h",
    "src/absl/numeric/int128.cc",
    "src/absl/numeric/int128.h",
    "src/absl/numeric/int128_have_intrinsic.inc",
    "src/absl/numeric/int128_no_intrinsic.inc",
    "src/absl/strings/ascii.cc",
    "src/absl/strings/ascii.h",
    "src/absl/strings/charconv.cc",
    "src/absl/strings/charconv.h",
    "src/absl/strings/escaping.cc",
    "src/absl/strings/escaping.h",
    "src/absl/strings/internal/bits.h",
    "src/absl/strings/internal/char_map.h",
    "src/absl/strings/internal/charconv_bigint.cc",
    "src/absl/strings/internal/charconv_bigint.h",
    "src/absl/strings/internal/charconv_parse.cc",
    "src/absl/strings/internal/charconv_parse.h",
    "src/absl/strings/internal/memutil.cc",
    "src/absl/strings/internal/memutil.h",
    "src/absl/strings/internal/ostringstream.cc",
    "src/absl/strings/internal/ostringstream.h",
    "src/absl/strings/internal/resize_uninitialized.h",
    "src/absl/strings/internal/stl_type_traits.h",
    "src/absl/strings/internal/str_format/arg.cc",
    "src/absl/strings/internal/str_format/arg.h",
    "src/absl/strings/internal/str_format/bind.cc",
    "src/absl/strings/internal/str_format/bind.h",
    "src/absl/strings/internal/str_format/checker.h",
    "src/absl/strings/internal/str_format/extension.cc",
    "src/absl/strings/internal/str_format/extension.h",
    "src/absl/strings/internal/str_format/float_conversion.cc",
    "src/absl/strings/internal/str_format/float_conversion.h",
    "src/absl/strings/internal/str_format/output.cc",
    "src/absl/strings/internal/str_format/output.h",
    "src/absl/strings/internal/str_format/parser.cc",
    "src/absl/strings/internal/str_format/parser.h",
    "src/absl/strings/internal/str_join_internal.h",
    "src/absl/strings/internal/str_split_internal.h",
    "src/absl/strings/internal/utf8.cc",
    "src/absl/strings/internal/utf8.h",
    "src/absl/strings/match.cc",
    "src/absl/strings/match.h",
    "src/absl/strings/numbers.cc",
    "src/absl/strings/numbers.h",
    "src/absl/strings/str_cat.cc",
    "src/absl/strings/str_cat.h",
    "src/absl/strings/str_format.h",
    "src/absl/strings/str_join.h",
    "src/absl/strings/str_replace.cc",
    "src/absl/strings/str_replace.h",
    "src/absl/strings/str_split.cc",
    "src/absl/strings/str_split.h",
    "src/absl/strings/string_view.cc",
    "src/absl/strings/string_view.h",
    "src/absl/strings/strip.h",
    "src/absl/strings/substitute.cc",
    "src/absl/strings/substitute.h",
    "src/absl/synchronization/barrier.cc",
    "src/absl/synchronization/barrier.h",
    "src/absl/synchronization/blocking_counter.cc",
    "src/absl/synchronization/blocking_counter.h",
    "src/absl/synchronization/internal/create_thread_identity.cc",
    "src/absl/synchronization/internal/create_thread_identity.h",
    "src/absl/synchronization/internal/graphcycles.cc",
    "src/absl/synchronization/internal/graphcycles.h",
    "src/absl/synchronization/internal/kernel_timeout.h",
    "src/absl/synchronization/internal/per_thread_sem.cc",
    "src/absl/synchronization/internal/per_thread_sem.h",
    "src/absl/synchronization/internal/thread_pool.h",
    "src/absl/synchronization/internal/waiter.cc",
    "src/absl/synchronization/internal/waiter.h",
    "src/absl/synchronization/mutex.cc",
    "src/absl/synchronization/mutex.h",
    "src/absl/synchronization/notification.cc",
    "src/absl/synchronization/notification.h",
    "src/absl/time/clock.cc",
    "src/absl/time/clock.h",
    "src/absl/time/duration.cc",
    "src/absl/time/format.cc",
    "src/absl/time/internal/cctz/include/cctz/civil_time.h",
    "src/absl/time/internal/cctz/include/cctz/civil_time_detail.h",
    "src/absl/time/internal/cctz/include/cctz/time_zone.h",
    "src/absl/time/internal/cctz/include/cctz/zone_info_source.h",
    "src/absl/time/internal/cctz/src/civil_time_detail.cc",
    "src/absl/time/internal/cctz/src/time_zone_fixed.cc",
    "src/absl/time/internal/cctz/src/time_zone_fixed.h",
    "src/absl/time/internal/cctz/src/time_zone_format.cc",
    "src/absl/time/internal/cctz/src/time_zone_if.cc",
    "src/absl/time/internal/cctz/src/time_zone_if.h",
    "src/absl/time/internal/cctz/src/time_zone_impl.cc",
    "src/absl/time/internal/cctz/src/time_zone_impl.h",
    "src/absl/time/internal/cctz/src/time_zone_info.cc",
    "src/absl/time/internal/cctz/src/time_zone_info.h",
    "src/absl/time/internal/cctz/src/time_zone_libc.cc",
    "src/absl/time/internal/cctz/src/time_zone_libc.h",
    "src/absl/time/internal/cctz/src/time_zone_lookup.cc",
    "src/absl/time/internal/cctz/src/time_zone_posix.cc",
    "src/absl/time/internal/cctz/src/time_zone_posix.h",
    "src/absl/time/internal/cctz/src/tzfile.h",
    "src/absl/time/internal/cctz/src/zone_info_source.cc",
    "src/absl/time/internal/get_current_time_ios.inc",
    "src/absl/time/internal/get_current_time_posix.inc",
    "src/absl/time/internal/get_current_time_windows.inc",
    "src/absl/time/internal/zoneinfo.inc",
    "src/absl/time/time.cc",
    "src/absl/time/time.h",
    "src/absl/types/any.h",
    "src/absl/types/bad_any_cast.cc",
    "src/absl/types/bad_any_cast.h",
    "src/absl/types/bad_optional_access.cc",
    "src/absl/types/bad_optional_access.h",
    "src/absl/types/bad_variant_access.cc",
    "src/absl/types/bad_variant_access.h",
    "src/absl/types/internal/variant.h",
    "src/absl/types/optional.cc",
    "src/absl/types/optional.h",
    "src/absl/types/span.h",
    "src/absl/types/variant.h",
    "src/absl/utility/utility.h",
  ]

  configs -= [ "//build/config/compiler:goma_code" ]
  configs += [ "//build/config/compiler:no_goma_code" ]
  public_configs = [ ":abseil_config" ]

  if (is_tsan) {
    # Surppress tsan or abseil's bug.
    # https://github.com/google/sanitizers/issues/953
    cflags = [
      "-mllvm",
      "-tsan-instrument-atomics=0",
      "-mllvm",
      "-tsan-instrument-memory-accesses=0",
    ]
  }
}
